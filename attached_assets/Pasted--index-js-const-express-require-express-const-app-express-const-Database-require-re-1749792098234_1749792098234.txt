// index.js
const express = require("express");
const app = express();
const Database = require("@replit/database");
const db = new Database();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get("/", async (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>Vivaly Messaging</title>
      <style>
        body { font-family: Arial; padding: 20px; }
        textarea, input[type="text"] { width: 100%; padding: 8px; margin: 5px 0; }
        button { padding: 10px 15px; margin-top: 10px; }
        .message { background: #f0f0f0; margin-top: 10px; padding: 10px; border-left: 5px solid #3a3a3a; }
        .reply { margin-left: 20px; background: #e0e0e0; padding: 8px; }
        .notification { background: #d4edda; padding: 10px; color: #155724; margin-bottom: 10px; display: none; }
      </style>
    </head>
    <body>

      <div class="notification" id="notifyBox">‚úÖ Message Sent!</div>

      <h2>Caregiver ‚û°Ô∏è Parent</h2>
      <form id="messageForm">
        <label>Caregiver ID:</label>
        <input type="text" id="senderId" value="caregiver123" />

        <label>Parent ID:</label>
        <input type="text" id="receiverId" value="parent456" />

        <label>Message:</label>
        <textarea id="messageContent" placeholder="Write your message..."></textarea>
        <button type="submit">Send Message</button>
      </form>

      <hr>

      <h2>üì• Parent Inbox</h2>
      <label>View Inbox for Parent ID:</label>
      <input type="text" id="inboxId" value="parent456" />
      <button onclick="loadInbox()">Load Inbox</button>

      <div id="inbox"></div>

      <script>
        document.getElementById("messageForm").addEventListener("submit", async (e) => {
          e.preventDefault();
          const senderId = document.getElementById("senderId").value;
          const receiverId = document.getElementById("receiverId").value;
          const content = document.getElementById("messageContent").value;

          const res = await fetch("/sendMessage", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ senderId, receiverId, content }),
          });

          const data = await res.json();
          if (data.success) {
            document.getElementById("notifyBox").style.display = "block";
            setTimeout(() => document.getElementById("notifyBox").style.display = "none", 3000);
          } else {
            alert(data.message || "Failed to send");
          }
        });

        async function replyTo(senderId, receiverId, originalMsgId) {
          const reply = prompt("Write your reply:");
          if (!reply) return;
          await fetch("/sendMessage", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ senderId, receiverId, content: "[Reply] " + reply }),
          });
          loadInbox(); // refresh inbox
        }

        async function reportMessage(messageId) {
          alert("Message " + messageId + " flagged for review ‚úÖ");
          // Add moderation logic here
        }

        async function loadInbox() {
          const userId = document.getElementById("inboxId").value;
          const res = await fetch("/getMessages/" + userId);
          const messages = await res.json();

          const inbox = document.getElementById("inbox");
          inbox.innerHTML = messages.map(
            (msg) => \`
              <div class="message">
                <strong>From:</strong> <a href="/caregiver/\${msg.senderId}">\${msg.senderId}</a><br>
                <strong>To:</strong> \${msg.receiverId}<br>
                <p>\${msg.content}</p>
                <button onclick="replyTo('\${msg.receiverId}', '\${msg.senderId}', '\${msg.id}')">Reply</button>
                <button onclick="reportMessage('\${msg.id}')">Report</button>
              </div>
            \`
          ).join("");
        }
      </script>
    </body>
    </html>
  `);
});

// Sample parent record
const ensureParent = async (id) => {
  const key = "user_" + id;
  let user = await db.get(key);
  if (!user) {
    user = { id, allowCaregiverMessages: true };
    await db.set(key, user);
  }
  return user;
};

// Send message route
app.post("/sendMessage", async (req, res) => {
  const { senderId, receiverId, content } = req.body;

  const parent = await ensureParent(receiverId);
  if (!parent.allowCaregiverMessages) {
    return res.status(403).json({ message: "Parent not accepting messages." });
  }

  const message = {
    id: Date.now().toString(),
    senderId,
    receiverId,
    content,
    timestamp: new Date().toISOString(),
  };

  const allMessages = (await db.get("messages")) || [];
  allMessages.push(message);
  await db.set("messages", allMessages);

  res.status(201).json({ success: true, message });
});

// Get all messages for a user
app.get("/getMessages/:userId", async (req, res) => {
  const { userId } = req.params;
  const messages = (await db.get("messages")) || [];
  const userMessages = messages.filter(
    (msg) => msg.receiverId === userId || msg.senderId === userId
  );
  res.json(userMessages);
});

app.listen(3000, () => console.log("üöÄ Vivaly Messaging running on port 3000"));

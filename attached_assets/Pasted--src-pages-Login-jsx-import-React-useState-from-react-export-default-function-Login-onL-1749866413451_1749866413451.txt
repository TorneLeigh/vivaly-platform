// src/pages/Login.jsx
import React, { useState } from 'react';

export default function Login({ onLoginSuccess }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [role, setRole] = useState('parent'); // default role
  const [error, setError] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    try {
      const res = await fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password, role }),
      });
      const data = await res.json();
      if (!res.ok) throw new Error(data.message || 'Login failed');
      
      // Store token in localStorage or context
      localStorage.setItem('token', data.token);
      // Pass roles and activeRole back to parent app for UI
      onLoginSuccess(data.roles, data.activeRole);
    } catch (err) {
      setError(err.message);
    }
  };

  return (
    <form onSubmit={handleSubmit} style={{ maxWidth: 300, margin: 'auto' }}>
      <h2>Login</h2>
      <label>
        Email
        <input value={email} onChange={e => setEmail(e.target.value)} required />
      </label>
      <label>
        Password
        <input type="password" value={password} onChange={e => setPassword(e.target.value)} required />
      </label>
      <div>
        <label>
          <input
            type="radio"
            name="role"
            value="parent"
            checked={role === 'parent'}
            onChange={() => setRole('parent')}
          />
          Parent
        </label>
        <label style={{ marginLeft: 20 }}>
          <input
            type="radio"
            name="role"
            value="caregiver"
            checked={role === 'caregiver'}
            onChange={() => setRole('caregiver')}
          />
          Caregiver
        </label>
      </div>
      {error && <div style={{ color: 'red' }}>{error}</div>}
      <button type="submit" style={{ marginTop: 10 }}>Login</button>
    </form>
  );
}

const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const { Database } = require("@replit/database");
const app = express();
const db = new Database();

app.use(cors());
app.use(bodyParser.json());

// ------------------ ROUTES ------------------

// POST a new job (Parent creates job)
app.post("/postJob", async (req, res) => {
  const job = {
    id: Date.now().toString(),
    parentId: req.body.parentId,
    startDate: req.body.startDate,
    numChildren: req.body.numChildren,
    rate: req.body.rate,
    hoursPerWeek: req.body.hoursPerWeek,
    description: req.body.description,
  };

  const jobs = (await db.get("jobs")) || [];
  jobs.push(job);
  await db.set("jobs", jobs);
  res.json({ success: true, job });
});

// GET all jobs (Caregivers browse)
app.get("/getJobs", async (req, res) => {
  const jobs = (await db.get("jobs")) || [];
  res.json(jobs);
});

// POST application to a job (Caregiver clicks “I’m Interested”)
app.post("/applyToJob", async (req, res) => {
  const { caregiverId, jobId, message } = req.body;
  const applications = (await db.get("applications")) || [];

  applications.push({
    id: Date.now().toString(),
    caregiverId,
    jobId,
    message,
    timestamp: new Date().toISOString(),
  });

  await db.set("applications", applications);
  res.json({ success: true });
});

// ------------------ STATIC HTML ------------------

app.get("/", (req, res) => {
  res.send(`
  <!DOCTYPE html>
  <html>
    <head>
      <title>Vivaly Job Board</title>
      <style>
        body { font-family: Arial; max-width: 700px; margin: auto; padding: 20px; }
        input, textarea { display: block; margin: 10px 0; padding: 8px; width: 100%; }
        button { padding: 10px 20px; background: #0099cc; color: white; border: none; cursor: pointer; }
        .job-card { border: 1px solid #ccc; padding: 15px; margin: 10px 0; }
      </style>
    </head>
    <body>
      <h1>Vivaly Parent Job Post</h1>
      <form id="jobForm">
        <input type="text" placeholder="Start Date (e.g. 2025-07-01)" id="startDate" required />
        <input type="number" placeholder="Number of Children" id="numChildren" required />
        <input type="text" placeholder="Rate (e.g. $30/hr)" id="rate" required />
        <input type="number" placeholder="Hours per Week" id="hoursPerWeek" required />
        <textarea placeholder="Description / Expectations" id="description" required></textarea>
        <button type="submit">Post Job</button>
      </form>

      <hr />

      <h2>Caregiver Job Board</h2>
      <div id="jobList"></div>

      <script>
        // Handle posting a job
        document.getElementById("jobForm").addEventListener("submit", async (e) => {
          e.preventDefault();
          const jobData = {
            parentId: "parent123",
            startDate: document.getElementById("startDate").value,
            numChildren: document.getElementById("numChildren").value,
            rate: document.getElementById("rate").value,
            hoursPerWeek: document.getElementById("hoursPerWeek").value,
            description: document.getElementById("description").value,
          };

          const res = await fetch("/postJob", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(jobData),
          });

          if (res.ok) {
            alert("Job posted!");
            loadJobs(); // refresh job list
          }
        });

        // Load and show jobs
        async function loadJobs() {
          const res = await fetch("/getJobs");
          const jobs = await res.json();
          const jobList = document.getElementById("jobList");

          jobList.innerHTML = jobs.map(job => \`
            <div class="job-card">
              <h3>Care Job: \${job.numChildren} child(ren)</h3>
              <p><strong>Start:</strong> \${job.startDate}</p>
              <p><strong>Rate:</strong> \${job.rate}</p>
              <p><strong>Hours/week:</strong> \${job.hoursPerWeek}</p>
              <p>\${job.description}</p>
              <button onclick="applyToJob('\${job.id}')">I'm Interested</button>
            </div>
          \`).join('');
        }

        // Apply to a job
        async function applyToJob(jobId) {
          const message = prompt("Send a message to the parent:");
          const res = await fetch("/applyToJob", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              caregiverId: "caregiver456",
              jobId,
              message
            }),
          });

          if (res.ok) {
            alert("Application sent!");
          }
        }

        loadJobs();
      </script>
    </body>
  </html>
  `);
});

// ------------------ START SERVER ------------------

app.listen(3000, () => {
  console.log("✅ Vivaly Job Board running at http://localhost:3000");
});
